services:
  nest-backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: greyfighter/prepre:nest-app-v2
    restart: unless-stopped
    # ports:
    #   - '8080:8080'

    expose:
      - 8080
      # - 8081
      # - 8082

    deploy:
      mode: replicated
      replicas: 3

    networks:
      - backend_network
      - db_network

    # container_name: nest-backend-app
    # ports:
    #   - '8080-8082:8080'
    # - '8080:8080' # Expose first replica
    # - '8081:8080' # Expose second replica
    # - '8082:8080' # Expose third replica
    secrets:
      - database-password
    # command: /usr/local/bin/node dist/main
    environment:
      # >>>>>>>>>   =postgresql://postgres:11@localhost:5432/nestjsdatabase?schema=public
      # - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/nestdatabase
      - NODE_ENV=production
      - POSTGRES_DB=nestjsdatabase #name
      - POSTGRES_HOST=database #hostinside docker netework
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/database-password
      - POSTGRES_SSLMODE=disable
      - POSTGRES_PORT=5432

    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - database-password

    environment:
      - POSTGRES_DB=nestdatabase
      - POSTGRES_PASSWORD_FILE=/run/secrets/database-password
    # ports:
    #   - '5432:5432'
    expose:
      - 5432

    volumes:
      - database-data:/var/lib/postgresql/data

    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

    networks:
      - db_network

volumes:
  database-data:

secrets:
  database-password:
    # file: database/password.txt
    file: /home/admin/database/password.txt

networks:
  backend_network:
    external: true
  db_network:
    external: true
